% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/silero.R
\name{silero}
\alias{silero}
\title{Voice Activity Detection}
\usage{
silero(file, milliseconds = 64, sample_rate, threshold = 0.5)
}
\arguments{
\item{file}{the path to an audio file which should be a wav file in 16 bit with mono PCM samples (pcm_s16le codec) with a sampling rate of either 8Khz or 16KHz}

\item{milliseconds}{integer with the number of milliseconds indicating to compute by this number of milliseconds the VAD signal. Can only be 32, 64 or 96 Defaults to 64.}

\item{sample_rate}{integer with the sample rate of \code{file}. If not provided, will use package av to extract it.}

\item{threshold}{numeric indicating if the probability is above this threshold, the segment is detected as voiced. Defaults to 0.5}
}
\value{
an object of class \code{VAD} which is a list with elements
\itemize{
\item{file: the path to the file}
\item{sample_rate: the sample rate of the audio file in Hz}
\item{channels: the number of channels in the audio - as the algorithm requires the audio to be mono this should only be 1}
\item{samples: the number of samples in the data}
\item{type: the type of VAD model - currently only 'silero'}
\item{milliseconds: the provided milliseconds - either by 32, 64 or 96 ms frames}
\item{frame_length: the frame length corresponding to the provided milliseconds}
\item{vad: a data.frame with columns millisecond, probability, has_voice and vad_segment indicating if the audio contains an active voice signal at that millisecond}
\item{vad_segments: a data.frame with columns vad_segment, start, end and has_voice where the start/end values are in seconds}
\item{vad_stats: a list with elements n_segments, n_segments_has_voice, n_segments_has_no_voice, seconds_has_voice, seconds_has_no_voice, pct_has_voice indicating the number of segments with voice and the duration of the voice/non-voice in the audio}
}
}
\description{
Detect the location of active voice in audio using the Silero VAD model. 
It works with .wav audio files with a sample rate of 8 or 16 Khz an can be applied over a window of eiher 32, 64 or 96 milliseconds.
}
\examples{
file <- system.file(package = "audio.vadsilero", "extdata", "test_wav.wav")
vad  <- silero(file, milliseconds = 32)
vad
vad  <- silero(file, milliseconds = 64)
vad
vad  <- silero(file, milliseconds = 96)
vad
vad$vad_segments
hist(vad$vad$probability, col = "lightblue", xlab = "Probability voiced")
plot(vad$vad$millisecond, vad$vad$probability, type = "l", 
     xlab = "Millisecond", ylab = "Probability voiced")

\dontrun{
library(av)
x <- read_audio_bin(file)
plot(seq_along(x) / 16000, x, type = "l")
abline(v = vad$vad_segments$start, col = "red", lwd = 2)
abline(v = vad$vad_segments$end, col = "blue", lwd = 2)

##
## If you have audio which is not in mono or another sample rate
## consider using R package av to convert to the desired format
av_media_info(file)
av_audio_convert(file, output = "audio_pcm_16khz.wav", 
                 format = "wav", channels = 1, sample_rate = 16000)
vad <- silero("audio_pcm_16khz.wav", milliseconds = 64)
}
}
